#include <iostream>
using namespace std;

void clearIthBit(int &n, int i) {
    int mask = 1<<i;
    mask = ~mask;
    n = (n)&mask;
}

void generateSubsets(char *s, int l) {
    cout<<endl;
    for(int i = 1; i<(1<<l); i++) {
        int j = i;
        int c = 0;
        while(j>0) {
            if(j&1)
                cout<<s[c];
            j = j>>1;
            c++;
        }
        cout<<endl;
    }
}

void sortArray(int *a, int k) {
    for(int i = 0; i<k-1; i++) {
        int minIndex = i;
        for(int j = i+1; j<k; j++) {
            if(a[j] < a[minIndex])
                minIndex = j;
        }
        swap(a[i], a[minIndex]);
    }
}

void checkForPayUp(int *b, int k, int m) {
    for(int i = 0; i< (1<<k); i++) {
        int j = i;
        int sum = 0;
        int l = 0;
        while(j) { 
            if(j&1)
                sum += b[l];
            l++;
            j = j>>1;
            if(sum > m)
                break;
        }
        if(sum == m) {
            cout<<"Yes"<<endl;
            return;
        }
    }
    cout<<"No"<<endl;
}

void payingUp(int *a, int n, int m) {
    int b[20];
    int k = 0;
    for(int i = 0; i<n; i++) {
        if(a[i] <= m)
            b[k++] = a[i];
    }
    sortArray(b, k);
    // for(int i = 0; i<k; i++) {
    //     cout<<b[i]<<endl;
    // }
    checkForPayUp(b, k, m);
}

void swap(int *a, int *b) {
    *a = (*a)^(*b);
    *b = (*a)^(*b);
    *a = (*a)^(*b);
}

int main() {
    int t;
    cin>>t;
    while(t--) {
        int n, m;
        cin>>n>>m;
        int a[20];
        for(int i = 0; i<n; i++)
            cin>>a[i];
        payingUp(a, n, m);
    }
    return 0;
}
